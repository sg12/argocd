{{- if .Values.rabbitmq.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
spec:
  serviceName: "rabbitmq-svc"
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:management-alpine
        ports:
        - name: amqp
          containerPort: 5672
        - name: management
          containerPort: 15672
        
        # --- Переменные окружения ---
        env:
          # 1. Задаем имя пользователя и пароль из отдельного секрета
          - name: RABBITMQ_DEFAULT_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.appSecretName }}
                key: RABBITMQ_USER
          - name: RABBITMQ_DEFAULT_PASS
            valueFrom:
              secretKeyRef:
                name: {{ .Values.appSecretName }}
                key: RABBITMQ_PASS
          
          # 2. Задаем Erlang Cookie из его собственного секрета
          - name: RABBITMQ_ERLANG_COOKIE
            valueFrom:
              secretKeyRef:
                name: {{ .Values.rabbitmqCookieSecretName }}
                key: erlang-cookie
          
          # 3. Правильно формируем имя ноды RabbitMQ
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(MY_POD_NAME)"
            
        # --- Проверка готовности ---
        readinessProbe:
          tcpSocket:
            port: 5672
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        # --- Хранилище ---
        volumeMounts:
        - name: rabbitmq-data # Подключаем диск для данных
          mountPath: /var/lib/rabbitmq

        # --- Ресурсы (хорошая практика) ---
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"

  # --- Шаблон для автоматического создания диска ---
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
{{- end -}}
